<!-- icon of dash board-->

<div class="container-fluid">
    <div class="content-header">
        <div class="row">
            <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                    <span class="info-box-icon bg-info elevation-1"><i class="fa fa-motorcycle"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">Xe đã đăng ký</span>
                        <span class="info-box-number"><%= numProduct.length%></span>
                    </div>
                </div>
            </div>

            <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box mb-3">
                    <span class="info-box-icon bg-danger elevation-1"><i class="fa fa-credit-card"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">Xe đang cho thuê</span>
                        <span class="info-box-number"><%= productactive.length%></span>
                    </div>
                </div>
            </div>

            <div class="clearfix hidden-md-up"></div>

            <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box mb-3">
                    <span class="info-box-icon bg-success elevation-1"><i class="fa fa-check-circle"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">Xe đã cho thuê</span>
                        <span class="info-box-number"><%= productonhire.length%></span>
                    </div>
                </div>
            </div>

            <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box mb-3">
                    <span class="info-box-icon bg-warning elevation-1"><i class="fa fa-users"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">Tài khoản đã đăng ký: <%= numUser.length%></span>
                        <span id="userCount" class="info-box-number"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-7">
            <div class="card direct-chat direct-chat-primary" style="cursor: pointer;">
                <div class="card-header ui-sortable-handle">
                    <h3 class="card-title">Inbox</h3>
                    <div class="card-tools">
                        <span title="3 New Messages" class="badge badge-primary"><%= listfeedback.filter(item=>item.status==='inactive').length%></span>
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body" style="overflow: hidden;"> <!-- Add overflow: hidden; here -->
                    <div class="table-responsive mailbox-messages" style="max-height: 310px;"> <!-- Change overflow-y: scroll; to overflow-y: auto; -->
                        <table class="table table-hover table-striped">
                            <tbody>
                                <% let filteredFeedback = listfeedback.filter(item=>item.status==='inactive'); %>
                                <% if (filteredFeedback.length > 0) { %>
                                    <% filteredFeedback.slice(0, 4).forEach((item) => { %>
                                        <tr>
                                            <td><a href=""><span class="badge <%= item.status === 'active' ? 'badge-success' : 'badge-danger' %>"><%= item.status ==='active'?'seen':'unread'%></span></a></td>
                                            <td class="mailbox-name"><a href="/admin/contact"><%= item.Name%></a></td>
                                            <td class="mailbox-subject"><b><%= item.Email%></b></td>
                                            <td class="mailbox-attachment"></td>
                                            <td class="mailbox-date"><%= item.createdAt.toISOString().split('T')[0]%></td>
                                        </tr>
                                    <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="5">No data available.</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div id="map"></div>
        </div>
        <div class="col-md-5">
            <div class="calendar">
                <div class="calendar-frame">
                    <div class="calendar-header">
                        <span class="month-picker" id="month-picker">February</span>
                        <div class="year-picker">
                            <span class="year-change" id="prev-year">
                                <pre>&lt</pre>
                            </span>
                            <span id="year">2021</span>
                            <span class="year-change" id="next-year">
                                <pre>&gt</pre>
                            </span>
                        </div>
                    </div>

                    <div class="mt-3">
                        <div class="calendar-week-day">
                            <div>Sun</div>
                            <div>Mon</div>
                            <div>Tue</div>
                            <div>Wed</div>
                            <div>Thu</div>
                            <div>Fri</div>
                            <div>Sat</div>
                        </div>
                        <div class="calendar-days"></div>
                    </div>
                    <div class="month-list"></div>
                </div>
            </div>

            <div class="card direct-chat direct-chat-primary mt-3">
                <div class="card-header ui-sortable-handle">
                    <h3 class="card-title">Direct Chat</h3>
                    <div class="card-tools">
                        <span title="3 New Messages" class="badge badge-primary">ADMIN</span>
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" title="Contacts" data-widget="chat-pane-toggle">
                            <i class="fas fa-comments"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="direct-chat-messages">
                        <ul class="contacts-list" id="messages">
                    </ul>
                    </div>
                </div>
                <div class="card-footer">
                    <form action="#" method="post">
                        <div class="input-group">
                            <select id="room" name="room" class="form-control custom-select">
                                <option selected disabled="">Select one</option>
                            </select>
                            <input id="m" autocomplete="off" type="text" name="message" placeholder="Type Message ..." class="form-control">
                            <span class="input-group-append">
                                <button type="submit" class="btn btn-primary">Send</button>
                            </span>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

<script>
    //Start calendar
    let calendar = document.querySelector('.calendar')

    const month_names = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']

    let currDate = new Date()

    let curr_month = { value: currDate.getMonth() }
    let curr_year = { value: currDate.getFullYear() }

    let startDate = null;
    let endDate = null;

    isLeapYear = (year) => {
        return (year % 4 === 0 && year % 100 !== 0 && year % 400 !== 0) || (year % 100 === 0 && year % 400 === 0)
    }

    getFebDays = (year) => {
        return isLeapYear(year) ? 29 : 28
    }

    generateCalendar = (month, year) => {
        let calendar_days = calendar.querySelector('.calendar-days')
        let calendar_header_year = calendar.querySelector('#year')

        let days_of_month = [31, getFebDays(year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

        calendar_days.innerHTML = ''

        let curr_month_name = `${month_names[month]}`
        month_picker.innerHTML = curr_month_name
        calendar_header_year.innerHTML = year

        // get first day of month
        let first_day = new Date(year, month, 1)
        let last_day = new Date(year, month + 1, 0)

        // generate days for the previous month
        for (let i = 0; i < first_day.getDay(); i++) {
            let day = document.createElement('div')
            day.classList.add('calendar-day-hover', 'prev-month')
            day.innerHTML = new Date(year, month, i - first_day.getDay() + 1).getDate()
            calendar_days.appendChild(day)
        }

        // generate days for the current month
        for (let i = 1; i <= days_of_month[month]; i++) {
            let day = document.createElement('div');
            day.classList.add('calendar-day-hover');
            day.innerHTML = i;
            day.dataset.date = new Date(year, month, i).getTime();
            if (new Date(year, month, i) < new Date(currDate.getFullYear(), currDate.getMonth(), currDate.getDate())) {
                day.classList.add('past-date');
            }
            if (i === currDate.getDate() && year === currDate.getFullYear() && month === currDate.getMonth()) {
                day.classList.add('curr-date');
            }
            calendar_days.appendChild(day);
        }

        // generate days for the next month
        for (let i = 1; i < 7 - last_day.getDay(); i++) {
            let day = document.createElement('div')
            day.classList.add('calendar-day-hover', 'next-month')
            day.innerHTML = i
            day.dataset.date = new Date(year, month + 1, i).getTime();
            // Check if the next month's day is in the past
            if (new Date(year, month + 1, i) < new Date(currDate.getFullYear(), currDate.getMonth(), currDate.getDate())) {
                day.classList.add('past-date');
            }
            calendar_days.appendChild(day)
        }
    }

    let month_list = calendar.querySelector('.month-list')

    month_names.forEach((e, index) => {
        let month = document.createElement('div')
        month.innerHTML = `<div data-month="${index}">${e}</div>`
        month.querySelector('div').onclick = () => {
            month_list.classList.remove('show')
            curr_month.value = index
            generateCalendar(curr_month.value, curr_year.value)
        }
        month_list.appendChild(month)
    })

    let month_picker = calendar.querySelector('#month-picker')

    month_picker.onclick = () => {
        month_list.classList.add('show')
    }

    generateCalendar(curr_month.value, curr_year.value)

    document.querySelector('#prev-year').onclick = () => {
        --curr_year.value
        generateCalendar(curr_month.value, curr_year.value)
    }

    document.querySelector('#next-year').onclick = () => {
        ++curr_year.value
        generateCalendar(curr_month.value, curr_year.value)
    }
    //End calendar

    //Start map
    var map = L.map('map').setView([0, 0], 1);
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 30,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);
    var marker = L.marker([0, 0]).addTo(map);

    // Lấy vị trí hiện tại của người dùng (yêu cầu sự cho phép của trình duyệt)
    if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(function (position) {
            var lat = position.coords.latitude;
            var lon = position.coords.longitude;

            map.setView([lat, lon], 17);
            marker.setLatLng([lat, lon]);
        });
    } else {
        console.log("Trình duyệt không hỗ trợ xác định vị trí của bạn.");
    }

    //End map
</script>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
  
    socket.on('connect', () => {
      console.log('Connected to server');
    });
  
    $('form').submit(function(e) {
      e.preventDefault(); 
      const room = $('#room').val();
      const message = $('#m').val();
  
      if (!room || !message) {
        console.log('room or message is undefined');
        return false;
      }
  
      socket.emit('join room', room);
      socket.emit('chat message', { room, message }); 
      $('#m').val('');
      return false;
    });
  
    socket.on('chat message', function(data) {
      $('#messages').append($('<li>').text(data.message + ' ' + data.room)); 
    });
    
   socket.on('updateUserCount', function(userCount) {
    $('#userCount').text('Current user:' + userCount);
});
socket.on('userList', function(users) {
  const userListElement = $('#room');
  userListElement.empty(); 
  users.forEach(user => {
    userListElement.append($('<option>').val(user.userId).text(user.userId));
  });
});

  </script>